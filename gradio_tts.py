# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qds0J7oSymOYRX-ymVTw_UMNtzmRzDtc
"""

# 필요한 패키지 설치
!pip install gradio gtts librosa soundfile

import gradio as gr
from gtts import gTTS
import librosa
import numpy as np
import soundfile as sf
import os

# 도레미파솔라시도에 해당하는 반음 값 (C D E F G A B C')
pitch_shifts = [0, 2, 4, 5, 7, 9, 11, 12]  # 반음 값

# 한 글자씩 ', '를 넣어 띄어쓰기하는 함수
def add_comma_between_characters(text):
    return ', '.join(list(text))

# 입력된 텍스트를 한 글자씩 ', '를 넣어 띄어쓰고, TTS로 음성 변환한 후 피치 시프트 적용
def text_to_speech_with_pitch_shift(text):
    # 1. 입력 텍스트를 한 글자씩 ', '를 넣어 띄어쓰기
    spaced_text = add_comma_between_characters(text)

    # 2. gTTS로 변환된 문장을 음성으로 변환
    tts = gTTS(spaced_text, lang='ko')
    tts.save("input_audio.mp3")

    # 3. 변환된 음성 불러오기
    audio, sr = librosa.load("input_audio.mp3", sr=22050)

    # 음성 데이터를 일정한 간격으로 분리하는 함수 (librosa의 split 사용)
    def split_audio_to_syllables(audio, sr):
        intervals = librosa.effects.split(audio, top_db=30)  # 음성이 있는 부분만 추출
        syllables = [audio[start:end] for start, end in intervals]
        return syllables

    # 각 음절에 도레미파솔라시도 피치 시프트 적용
    def apply_scale_shift_to_syllables(syllables, sr):
        shifted_syllables = []
        for i, syllable in enumerate(syllables):
            # 도레미파솔라시도 순서로 반복
            pitch_shift_value = pitch_shifts[i % len(pitch_shifts)]
            shifted_syllable = librosa.effects.pitch_shift(syllable, sr=sr, n_steps=pitch_shift_value)
            shifted_syllables.append(shifted_syllable)
        transformed_audio = np.concatenate(shifted_syllables)
        return transformed_audio

    # 4. 음절로 나누기
    syllables_audio = split_audio_to_syllables(audio, sr)

    # 5. 각 음절에 도레미파솔라시도 피치 적용
    transformed_audio = apply_scale_shift_to_syllables(syllables_audio, sr)

    # 결과를 wav 파일로 저장
    output_file = "transformed_audio.wav"
    sf.write(output_file, transformed_audio, sr)

    return output_file

# Gradio 인터페이스 정의
def gradio_process(input_text):
    output_file = text_to_speech_with_pitch_shift(input_text)
    return output_file

# Gradio 인터페이스 생성
iface = gr.Interface(
    fn=gradio_process,  # 처리할 함수
    inputs=gr.Textbox(lines=2, placeholder="문장을 입력하세요."),  # 입력: 텍스트 박스
    outputs=gr.Audio(type="filepath"),  # 출력: 오디오 파일 경로 출력
    title="도레미파솔라시도 변환기",  # 인터페이스 제목
    description="입력된 문장의 음성을 도레미파솔라시도로 변환합니다."  # 설명
)

# 인터페이스 실행
iface.launch()

