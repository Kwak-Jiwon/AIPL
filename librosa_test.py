# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qds0J7oSymOYRX-ymVTw_UMNtzmRzDtc
"""

# 필요한 패키지 설치
!pip install gtts librosa soundfile

from gtts import gTTS
import librosa
import soundfile as sf
from IPython.display import Audio
import numpy as np

# 텍스트 입력 (한 음절당 도레미파솔라시도를 적용할 문장)
text = "안 녕 하 세 요, 도 레 미 파 솔 라 시 도"

# gTTS로 텍스트를 음성으로 변환
tts = gTTS(text, lang='ko')
tts.save("tts_output.mp3")

# 변환된 음성 불러오기
audio, sampling_rate = librosa.load("tts_output.mp3", sr=22050)

# 음성 데이터를 일정한 간격으로 분리하는 함수 (librosa의 split 사용)
def split_audio_to_syllables(audio, sr, hop_length=512):
    # 일정 에너지 이하 구간을 제외하고 유효 신호가 있는 구간을 나눔
    intervals = librosa.effects.split(audio, top_db=30)
    syllables = [audio[start:end] for start, end in intervals]
    return syllables

# 도레미파솔라시도에 해당하는 반음 값 (C D E F G A B C')
pitch_shifts = [0, 2, 4, 5, 7, 9, 11, 12]  # 반음 값

# 각 음절을 도레미파솔라시도에 맞게 피치 시프트하는 함수
def apply_scale_shift_to_syllables(syllables, sr):
    shifted_syllables = []

    for i, syllable in enumerate(syllables):
        # 도레미파솔라시도 순서로 반복
        pitch_shift_value = pitch_shifts[i % len(pitch_shifts)]
        shifted_syllable = librosa.effects.pitch_shift(syllable, sr=sr, n_steps=pitch_shift_value)
        shifted_syllables.append(shifted_syllable)

    # 모든 음절을 하나의 오디오로 결합
    transformed_audio = np.concatenate(shifted_syllables)
    return transformed_audio

# 1. 음절로 나누기
syllables_audio = split_audio_to_syllables(audio, sampling_rate)

# 2. 각 음절에 도레미파솔라시도 피치 적용
transformed_audio = apply_scale_shift_to_syllables(syllables_audio, sampling_rate)

# 변환된 음성 재생
print("변환된 음성 (한 음절씩 도레미파솔라시도 적용):")
display(Audio(transformed_audio, rate=sampling_rate))

# 결과 저장
sf.write('melodytest.wav', transformed_audio, sampling_rate)

# 파일 다운로드
from google.colab import files
files.download('melodytest.wav')

